"""Set product.id to be auto-incrementing

Revision ID: <the_new_revision_id>
Revises: 906de5175540
Create Date: ...

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '<the_new_revision_id>'
down_revision: Union[str, None] = '906de5175540'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Create a sequence for the primary key
    op.execute("CREATE SEQUENCE product_id_seq")
    
    # Alter the 'id' column to use the sequence as its default value
    op.execute("ALTER TABLE product ALTER COLUMN id SET DEFAULT nextval('product_id_seq')")
    
    # Make the sequence owned by the column, so it's dropped if the column is
    op.execute("ALTER SEQUENCE product_id_seq OWNED BY product.id")
    
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # The reverse operation is to remove the default
    op.execute("ALTER TABLE product ALTER COLUMN id DROP DEFAULT")
    
    # And drop the sequence
    op.execute("DROP SEQUENCE product_id_seq")
    
    # ### end Alembic commands ###